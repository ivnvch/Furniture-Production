// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using furniture_Production;

#nullable disable

namespace furniture_Production.Migrations
{
    [DbContext(typeof(ProductionContent))]
    [Migration("20220724194328_PopulationAdded")]
    partial class PopulationAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.6.22329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeProduct", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("employeesId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "employeesId");

                    b.HasIndex("employeesId");

                    b.ToTable("EmployeeProduct");
                });

            modelBuilder.Entity("End_ProductOrder", b =>
                {
                    b.Property<int>("EndproductsId")
                        .HasColumnType("int");

                    b.Property<int>("ordersId")
                        .HasColumnType("int");

                    b.HasKey("EndproductsId", "ordersId");

                    b.HasIndex("ordersId");

                    b.ToTable("End_ProductOrder");
                });

            modelBuilder.Entity("MaterialProduct", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("materialsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "materialsId");

                    b.HasIndex("materialsId");

                    b.ToTable("MaterialProduct");
                });

            modelBuilder.Entity("MaterialProvider", b =>
                {
                    b.Property<int>("MaterialsId")
                        .HasColumnType("int");

                    b.Property<int>("ProvidersId")
                        .HasColumnType("int");

                    b.HasKey("MaterialsId", "ProvidersId");

                    b.HasIndex("ProvidersId");

                    b.ToTable("MaterialProvider");
                });

            modelBuilder.Entity("furniture_Production.Classes.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Populations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Гомель"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Брест"
                        },
                        new
                        {
                            Id = 3,
                            Name = "swv"
                        });
                });

            modelBuilder.Entity("furniture_Production.Classes.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityID = 3,
                            Name = "ftyr"
                        });
                });

            modelBuilder.Entity("furniture_Production.Classes.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("furniture_Production.Classes.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("furniture_Production.Classes.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("furniture_Production.Classes.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("furniture_Production.Classes.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("furniture_Production.Classes.Buyer", b =>
                {
                    b.HasBaseType("furniture_Production.Classes.Person");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("furniture_Production.Classes.Employee", b =>
                {
                    b.HasBaseType("furniture_Production.Classes.Person");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("furniture_Production.Classes.End_Product", b =>
                {
                    b.HasBaseType("furniture_Production.Classes.Product");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("EndProduct");
                });

            modelBuilder.Entity("EmployeeProduct", b =>
                {
                    b.HasOne("furniture_Production.Classes.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("furniture_Production.Classes.Employee", null)
                        .WithMany()
                        .HasForeignKey("employeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("End_ProductOrder", b =>
                {
                    b.HasOne("furniture_Production.Classes.End_Product", null)
                        .WithMany()
                        .HasForeignKey("EndproductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("furniture_Production.Classes.Order", null)
                        .WithMany()
                        .HasForeignKey("ordersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialProduct", b =>
                {
                    b.HasOne("furniture_Production.Classes.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("furniture_Production.Classes.Material", null)
                        .WithMany()
                        .HasForeignKey("materialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialProvider", b =>
                {
                    b.HasOne("furniture_Production.Classes.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("furniture_Production.Classes.Provider", null)
                        .WithMany()
                        .HasForeignKey("ProvidersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("furniture_Production.Classes.Company", b =>
                {
                    b.HasOne("furniture_Production.Classes.City", "City")
                        .WithMany("Company")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("furniture_Production.Classes.Order", b =>
                {
                    b.HasOne("furniture_Production.Classes.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("furniture_Production.Classes.Buyer", b =>
                {
                    b.HasOne("furniture_Production.Classes.Person", null)
                        .WithOne()
                        .HasForeignKey("furniture_Production.Classes.Buyer", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("furniture_Production.Classes.Employee", b =>
                {
                    b.HasOne("furniture_Production.Classes.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("furniture_Production.Classes.Person", null)
                        .WithOne()
                        .HasForeignKey("furniture_Production.Classes.Employee", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("furniture_Production.Classes.End_Product", b =>
                {
                    b.HasOne("furniture_Production.Classes.Product", null)
                        .WithOne()
                        .HasForeignKey("furniture_Production.Classes.End_Product", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("furniture_Production.Classes.City", b =>
                {
                    b.Navigation("Company");
                });

            modelBuilder.Entity("furniture_Production.Classes.Company", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
